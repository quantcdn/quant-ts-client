/**
 * QuantCloud API
 * QuantCloud API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ContainerDependsOnInner } from './containerDependsOnInner';
import { ContainerEnvironmentInner } from './containerEnvironmentInner';
import { ContainerHealthCheck } from './containerHealthCheck';
import { ContainerImageReference } from './containerImageReference';
import { ContainerMountPointsInner } from './containerMountPointsInner';
import { ContainerSecretsInner } from './containerSecretsInner';

export class Container {
    /**
    * Name of the container
    */
    'name': string;
    'imageReference': ContainerImageReference;
    /**
    * Container-level CPU units
    */
    'cpu'?: number | null;
    /**
    * Container-level memory hard limit (MiB)
    */
    'memory'?: number | null;
    /**
    * Container-level memory soft limit (MiB)
    */
    'memoryReservation'?: number | null;
    /**
    * List of container ports to expose
    */
    'exposedPorts'?: Array<number> | null;
    'mountPoints'?: Array<ContainerMountPointsInner> | null;
    /**
    * Environment variables specific to this container
    */
    'environment'?: Array<ContainerEnvironmentInner> | null;
    /**
    * Secrets mapped to environment variables
    */
    'secrets'?: Array<ContainerSecretsInner> | null;
    'healthCheck'?: ContainerHealthCheck | null;
    /**
    * Container startup dependencies
    */
    'dependsOn'?: Array<ContainerDependsOnInner> | null;
    'command'?: Array<string> | null;
    'entryPoint'?: Array<string> | null;
    'workingDirectory'?: string | null;
    'essential'?: boolean | null = true;
    'readonlyRootFilesystem'?: boolean | null = false;
    'user'?: string | null;
    /**
    * Enable origin protection for all exposed ports on this container
    */
    'originProtection'?: boolean | null = false;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "imageReference",
            "baseName": "imageReference",
            "type": "ContainerImageReference"
        },
        {
            "name": "cpu",
            "baseName": "cpu",
            "type": "number"
        },
        {
            "name": "memory",
            "baseName": "memory",
            "type": "number"
        },
        {
            "name": "memoryReservation",
            "baseName": "memoryReservation",
            "type": "number"
        },
        {
            "name": "exposedPorts",
            "baseName": "exposedPorts",
            "type": "Array<number>"
        },
        {
            "name": "mountPoints",
            "baseName": "mountPoints",
            "type": "Array<ContainerMountPointsInner>"
        },
        {
            "name": "environment",
            "baseName": "environment",
            "type": "Array<ContainerEnvironmentInner>"
        },
        {
            "name": "secrets",
            "baseName": "secrets",
            "type": "Array<ContainerSecretsInner>"
        },
        {
            "name": "healthCheck",
            "baseName": "healthCheck",
            "type": "ContainerHealthCheck"
        },
        {
            "name": "dependsOn",
            "baseName": "dependsOn",
            "type": "Array<ContainerDependsOnInner>"
        },
        {
            "name": "command",
            "baseName": "command",
            "type": "Array<string>"
        },
        {
            "name": "entryPoint",
            "baseName": "entryPoint",
            "type": "Array<string>"
        },
        {
            "name": "workingDirectory",
            "baseName": "workingDirectory",
            "type": "string"
        },
        {
            "name": "essential",
            "baseName": "essential",
            "type": "boolean"
        },
        {
            "name": "readonlyRootFilesystem",
            "baseName": "readonlyRootFilesystem",
            "type": "boolean"
        },
        {
            "name": "user",
            "baseName": "user",
            "type": "string"
        },
        {
            "name": "originProtection",
            "baseName": "originProtection",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return Container.attributeTypeMap;
    }
}

